"""A Simple bot that uses the inbuilt FingerTrap strategy"""
from aiomql import Bot, RAM, TimeFrame, FingerTrap, ForexSymbol, SingleTrader
import logging

from strategies import FingerTrap as FT, ADI, ATR
from traders import ConfirmationTrader

logging.basicConfig(level=logging.INFO)

ram = RAM(amount=5, risk_to_reward=2.5, points=15000)
fxram = RAM(amount=5, risk_to_reward=2.5, points=80)
# config = Config()
# print(config.telegram_bot_token)
"""
EURUSD,
 AUDUSD,
 USDCHF,
 GBPUSD,
 USDJPY,
 NZDUSD,
 USDCAD,
 EURGBP,
 EURJPY,
 EURCHF,
 EURAUD,
 EURNZD,
 EURCAD,
 GBPJPY,
 GBPCHF,
 GBPAUD,
 GBPNZD,
 GBPCAD,
 CHFJPY,
 AUDJPY,
 AUDCHF,
 AUDNZD,
 AUDCAD,
 NZDJPY,
 US30,
 CADCHF,
 CADJPY,
 XAGUSD,
 XAUUSD,
 NZDCAD,
 NZDCHF,
 AUS200,
 UK100,
 FRA40,
 EUSTX50,
 JPN225,
 ESP35,
 XBRUSD,
 XTIUSD,
 NAS100,
 SPX500,
 EURHUF,
 EURNOK,
 EURPLN,
 EURSEK,
 EURTRY,
 USDDKK,
 USDCZK,
 USDMXN,
 USDHUF,
 USDNOK,
 USDPLN,
 USDSEK,
 EURHKD,
 USDSGD,
 SGDJPY,
 USDHKD,
 USDCNH,
 USDTRY,
 BTCUSD,
 ETHUSD,
 LTCUSD,
 XRPUSD,
 BCHUSD,
 XNGUSD,
 EURMXN,
 GBPMXN,
 USDZAR,
 EURZAR,
 GBPZAR,
 ZARJPY,
 AAVEUSD,
 ADAUSD,
 ALGOUSD,
 ATOMUSD,
 AVAXUSD,
 AXSUSD,
 BNBUSD,
 DASHUSD,
 DOGEUSD,
 DOTUSD,
 FILUSD,
 FTMUSD,
 GRTUSD,
 ICPUSD,
 IOTAUSD,
 LINKUSD,
 LRCUSD,
 MANAUSD,
 MATICUSD,
 NEARUSD,
 SOLUSD,
 UNIUSD,
 ZECUSD,
 ETCUSD,
 GER40,
 AAPL.NAS,
 WLMR.SGX,
 AZN.LSE,
 ABBV.NYSE,
 ABNB.NAS,
 ABT.NYSE,
 ACN.NYSE,
 ADBE.NAS,
 AMD.NAS,
 AMZN.NAS,
 AVGO.NAS,
 AXP.NYSE,
 BA.NYSE,
 BABA.NYSE,
 BAC.NYSE,
 BKNG.NAS,
 BLK.NYSE,
 BMY.NYSE,
 BX.NYSE,
 CAT.NYSE,
 CMCSA.NAS,
 COP.NYSE,
 COST.NAS,
 CRM.NYSE,
 CSCO.NAS,
 CVS.NYSE,
 CVX.NYSE,
 DHR.NYSE,
 DIS.NYSE,
 GE.NYSE,
 GOOGL.NAS,
 GS.NYSE,
 HD.NYSE,
 HMC.NYSE,
 HON.NAS,
 IBM.NYSE,
 INTC.NAS,
 INTU.NAS,
 ISRG.NAS,
 JNJ.NYSE,
 JPM.NYSE,
 KO.NYSE,
 LIN.NYSE,
 LLY.NYSE,
 LMT.NYSE,
 MA.NYSE,
 MCD.NYSE,
 MDLZ.NAS,
 META.NAS,
 MMM.NYSE,
 MRK.NYSE,
 MS.NYSE,
 MSFT.NAS,
 NEE.NYSE,
 NFLX.NAS,
 NKE.NYSE,
 NOW.NYSE,
 NVDA.NAS,
 ORCL.NYSE,
 PEP.NAS,
 PFE.NYSE,
 PG.NYSE,
 PM.NYSE,
 PYPL.NAS,
 QCOM.NAS,
 RTX.NYSE,
 SAP.NYSE,
 SBUX.NAS,
 SHOP.NYSE,
 SONY.NYSE,
 T.NYSE,
 TMO.NYSE,
 TMUS.NAS,
 TSLA.NAS,
 TXN.NAS,
 UNH.NYSE,
 UNP.NYSE,
 UPS.NYSE,
 V.NYSE,
 VZ.NYSE,
 WFC.NYSE,
 WMT.NYSE,
 XOM.NYSE,
 JD.NAS,
 LI.NAS,
 TCEHY.OTC,
 BHP.ASX,
 CBA.ASX,
 CSL.ASX,
 NAB.ASX,
 WES.ASX,
 DAII.TSE,
 DKI.TSE,
 HIT.TSE,
 KEE.TSE,
 MUR.TSE,
 NID.TSE,
 OL.TSE,
 SVN.TSE,
 TKY.TSE,
 TM.TSE,
 TMH.TSE,
 BARC.LSE,
 BATS.LSE,
 HSBA.LSE,
 LSEG.LSE,
 SHEL.LSE,
 ULVR.LSE,
 VOD.LSE,
 AI.EPA,
 AIR.EPA,
 BNP.EPA,
 MC.EPA,
 OR.EPA,
 RMS.EPA,
 TTE.EPA,
 ADS.XE,
 ALV.XE,
 BAYN.FWB,
 BEI.XE,
 BMW.XE,
 DTE.FWB,
 DTG.FWB,
 MBG.XE,
 MRK.XE,
 SIE.XE,
 VNA.XE,
 CNHI.MIL,
 ENEL.MIL,
 ENI.MIL,
 ISP.MIL,
 RACE.MIL,
 STLA.MIL,
 UCG.MIL,
 BBVA.BM,
 CABK.BM,
 ITX.BM,
 SAN.BM,
 ASML.EAS,
 HEIA.EAS,
 NESTE.OMXH,
 NOKIA.OMXH,
 VOLVA.SOMX,
 CPTL.SGX,
 HK.SGX,
 JAR.SGX,
 SGX.SGX,
 SIAIR.SGX,
 VOW3.XE,
 TRXUSD,
 NFLX.Daily,
 NVDA.Daily,
 TSLA.Daily,
 AMZN.Daily,
 AAPL.Daily,
 GOOGL.Daily,
 META.Daily,
 BABA.Daily,
 MMM.Daily,
 MSFT.Daily,
 AMD.Daily,
 SHOP.Daily,
 NAS100.Daily,
 US30.Daily,
 GER40.Daily,
 JPN225.Daily,
 SPX500.Daily,
 BTCUSD.Daily,
 ETHUSD.Daily,
 XBRUSD.Daily,
 XTIUSD.Daily,
 AVGO.NA
"""
fx_symbols = [
    ForexSymbol(name="EURUSD"),
    ForexSymbol(name="AUDUSD"),
    ForexSymbol(name="USDCHF"),
    ForexSymbol(name="GBPUSD"),
    ForexSymbol(name="USDJPY"),
    ForexSymbol(name="NZDUSD"),
    ForexSymbol(name="USDCAD"),
    ForexSymbol(name="EURGBP"),
    ForexSymbol(name="EURJPY"),
    ForexSymbol(name="EURCHF"),
    ForexSymbol(name="EURAUD"),
    ForexSymbol(name="EURNZD"),
    ForexSymbol(name="EURCAD"),
    ForexSymbol(name="GBPJPY"),
    ForexSymbol(name="GBPCHF"),
    ForexSymbol(name="GBPAUD"),
    ForexSymbol(name="GBPNZD"),
    ForexSymbol(name="GBPCAD"),
    ForexSymbol(name="CHFJPY"),
    ForexSymbol(name="AUDJPY"),
    ForexSymbol(name="AUDCHF"),
    ForexSymbol(name="AUDNZD"),
    ForexSymbol(name="AUDCAD"),
    ForexSymbol(name="NZDJPY"),
    ForexSymbol(name="USDCAD"),
    ForexSymbol(name="NZDCHF"),
    ForexSymbol(name="NZDCAD"),
    ForexSymbol(name="CADCHF"),
    ForexSymbol(name="CADJPY")
]
crypto_symols = [
    ForexSymbol(name="BTCUSD"),
    ForexSymbol(name="ETHUSD"),
    ForexSymbol(name="LTCUSD"),
    ForexSymbol(name="XRPUSD"),
    ForexSymbol(name="BCHUSD"),
    ForexSymbol(name="ADAUSD"),
    ForexSymbol(name="DOGEUSD"),
    ForexSymbol(name="DOTUSD"),
    ForexSymbol(name="SOLUSD"),
    ForexSymbol(name="AVAXUSD"),
    ForexSymbol(name="LINKUSD"),
    ForexSymbol(name="FILUSD"),
    ForexSymbol(name="UNIUSD"),
    ForexSymbol(name="AAVEUSD"),
    ForexSymbol(name="ATOMUSD"),
    ForexSymbol(name="ALGOUSD"),
    ForexSymbol(name="AXSUSD"),
    ForexSymbol(name="NEARUSD"),
    ForexSymbol(name="MATICUSD"),
]


def build_bot():
    bot = Bot()
    sts = [(FingerTrap(symbol=s, trader=ConfirmationTrader(symbol=s, ram=fxram)), ADI(symbol=s), ATR(symbol=s)) for s in fx_symbols]
    sts = [s for sy in sts for s in sy]
    cts = [(FingerTrap(symbol=s, trader=ConfirmationTrader(symbol=s, ram=ram)), ADI(symbol=s), ATR(symbol=s)) for s in crypto_symols]
    cts = [s for sy in cts for s in sy]
    [bot.add_strategy(s) for s in sts + cts]
    # bot.add_coroutine(closer)
    bot.execute()


build_bot()